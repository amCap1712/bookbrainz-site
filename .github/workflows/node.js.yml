name: BookBrainz CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:12.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: 
          - 5432:5432

      elasticserch:
        image: elasticsearch:5.6.8
        ports:
          - 9200:9200
          - 9300:9300

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup database
      run: |
        psql -c 'CREATE DATABASE bookbrainz_test;'
        psql -c 'CREATE EXTENSION "uuid-ossp"; CREATE SCHEMA musicbrainz; CREATE SCHEMA bookbrainz;' -d bookbrainz_test
        psql -f sql/schemas/musicbrainz.sql -d bookbrainz_test
        psql -f sql/schemas/bookbrainz.sql -d bookbrainz_test
        psql -f sql/scripts/create_triggers.sql -d bookbrainz_test
      env:
        PGHOST: localhost
        PGUSER: postgres
    
    - name: Use Node.js 14
      uses: actions/setup-node@v2
      with:
        node-version: 14.x
        
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-
    
    - run: npm install
    
    - run: npm run test-ci
    
    - run: npm run lint
      if: ${{ always() }}
      
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
